$color-primary: #55c57a;
$color-primary-light: #7ed56f;
$color-primary-dark: #28b485;

$color-grey-dark: #777;
$color-white: #fff;
$color-black: #000;

*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
}

html {
  /*это нужно чтобы остальные значения сделать ram. 100% - это 16 пикс по умолчанию в браузере*/
  font-size: 62.5%;
}

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  /*font-size: 16px;*/
  line-height: 1.7;
  color: $color-grey-dark;
  padding: 3rem;
  box-sizing: border-box;
}

.header {
  /* 95 процентов от экрана, снизу остается полоска*/
  height: 95vh;

  /*добавили градиент*/
  background-image: linear-gradient(to right bottom,
          rgba($color-primary-light, 0.8),
          rgba($color-primary-dark, 0.8)),
  url(../img/hero.jpg);
  background-size: cover;

  /*we can see always the bottom side of the picture when we change the browser size*/
  background-position: top;

  /*добавили для класса logo-box*/
  position: relative;

  /*делает обрезку гельятина. координаты в процентах по часовой стрелке*/
  /*vh меняет видимость объекта в зависимости от высоты окна*/
  clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%);

  /*значёк в  виде короны*/
  &__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem;
  }

  &__logo {
    height: 3.5rem;
  }

  &__text-box {
    position: absolute;
    top: 40%;
    /*эти настройки связаны с родительским элементом*/
    left: 50%;
    transform: translate(-50%, -50%);
    /*связано с смещаем центр текстбокса для выравнивания*/
    text-align: center;
    /*выравнивает текст по центру текстбокса*/
  }
}

.heading-primary {
  color: $color-white;
  text-transform: uppercase;

  /*нужно чтобы анимация в конце не тряслась - костыль такой*/
  backface-visibility: hidden;

  /*отступ снизу*/
  margin-bottom: 6rem;

  &--main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    animation-name: moveInLeft;
    animation-duration: 1s;
    /* animation-delay: 1s;*/
    /*animation-iteration-count: 3;*/

    /*начинается быстрее, заканч медленнее*/
    animation-timing-function: ease-out;
  }

  &--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.75rem;
    animation: moveInRight 1s ease-out;
  }
}

/*применяется в анимации h1*/
@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem)
  }
  80% {
    transform: translateX(1rem);
  }
  100% {
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem);
  }
  80% {
    transform: translateX(-1rem);
  }
  100% {
    opacity: 1;
    transform: translate(0);
  }
}

/*Эта анимация срабатывает правильно из-за animation-fill-mode*/
@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(3rem);
  }
  100% {
    opacity: 1;
    transform: translate(0);
  }
}

.btn {
  &:link, /*link is a state of btn selector*/
  &:visited /*if already clicked*/
  {
    /*это нужно чтобы кнопка не меняла цвет после нажатия*/
    text-transform: uppercase;
    text-decoration: none;

    /*первое для верха и низа, второе для лево право*/
    padding: 1.5rem 4rem;

    /*если мы хотим использовать паддинг и марджин нужно использовать этот display*/
    //inline-block ведет себя как текст
    display: inline-block;
    border-radius: 10rem;

    /*все свойства могут быть анимированны*/
    transition: all .2s;
    position: relative;
    /*добавляем - чтобы сделать эффект с after*/
    font-size: 1.6rem;
  }

  &:hover {
    /*hover - это псевдокласс - состояние класса btn когда навели на элемент*/
    transform: translateY(-3px);

    /*сдвиг тени по x, y,размытие, цвет и прозрачность*/
    box-shadow: 0 1rem 2rem rgba($color-black, .2);
    font-weight: 700;
  }

  &:active {
    /*always related to the initial link state*/
    transform: translateY(-1px);
    box-shadow: 0 .5rem 1rem rgba($color-black, .2);
  }

  &--white {
    background-color: $color-white;
    color: $color-grey-dark;

    &::after {
      background-color: $color-white;
    }
  }

  /*это фактически новый элемент*/
  &::after {
    /*идея в том, чтобы добавить такую же кнопку но нужно определить контент*/
    content: ""; //без этого не работает
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 10rem;
    position: absolute; //чтобы поместить за кнопкой, для этого позицию основного элемента нужно сделать relative
    top: 0;
    left: 0;

    /*позиция за основной кнопкой*/
    z-index: -1;
    transition: all .4s;
  }

  //читается так: когда мы наводим на кнопку - мы хотим этот стиль для ее копии after
  &:hover::after {
    /*делаем кнопку на заднем плане больше*/
    transform: scaleX(1.4) scaleY(1.8);

    //прячем кнопку
    opacity: 0;
  }

  &--animated {

    //движеение кнопки начнем на 750 мс позже остальной
    animation: moveInBottom .5s ease-out .75s;

    /*автоматически выставляет значение анимации 0 перед началом*/
    animation-fill-mode: backwards;
  }
}
